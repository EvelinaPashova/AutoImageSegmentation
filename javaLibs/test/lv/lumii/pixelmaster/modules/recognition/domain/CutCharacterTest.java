/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package lv.lumii.pixelmaster.modules.recognition.domain;

import lv.lumii.pixelmaster.modules.recognition.domain.CutCharacter;
import junit.framework.TestCase;
import lv.lumii.pixelmaster.core.api.domain.RasterImage;

/**
 *
 * @author user
 */
public class CutCharacterTest extends TestCase {
    
    public CutCharacterTest(String testName) {
        super(testName);
    }

    /**
     * Test of findBorders method, of class CutCharacter.
     */
    public void testFindBorders() {
        System.out.println("findBorders");
        RasterImage rImage = new RasterImage(20,21);
        int expResult[] = {16777215, 0, 0, 0, 0, 0, 0, 16777215, 16777215,
                           16777215, 16777215, 16777215, 0, 0, 0, 0, 0, 0, 0,
                           0, 0, 16777215, 16777215, 16777215, 16777215, 0, 16777215, 16777215, 16777215,
                           16777215, 16777215, 0, 0, 0, 16777215, 16777215, 16777215, 0, 16777215,
                           16777215, 16777215, 16777215, 16777215, 16777215, 16777215, 0, 0, 16777215, 16777215,
                           0, 16777215, 16777215, 16777215, 16777215, 16777215, 16777215, 16777215, 16777215, 0,
                           16777215, 16777215, 0, 16777215, 16777215, 16777215, 16777215, 16777215, 16777215, 16777215,
                           16777215, 0, 0, 16777215, 0, 16777215, 16777215, 16777215, 16777215, 16777215, 16777215,
                           16777215, 16777215, 0, 0, 16777215, 0, 16777215, 16777215, 16777215, 16777215, 16777215,
                           16777215, 16777215, 16777215, 0, 0, 16777215, 0, 16777215, 16777215, 16777215, 16777215,
                           16777215, 16777215, 16777215, 16777215, 0, 0, 16777215, 0, 16777215, 16777215, 16777215,
                           16777215, 16777215, 16777215, 16777215, 16777215, 0, 0, 16777215, 0, 16777215, 16777215,
                           16777215, 16777215, 16777215, 16777215, 16777215, 0, 0, 16777215, 16777215, 0, 16777215,
                           16777215, 16777215, 16777215, 16777215, 16777215, 0, 0, 0, 16777215, 0, 0, 0, 16777215,
                           16777215, 16777215, 0, 0, 0, 0, 16777215, 16777215, 0, 0, 0, 0, 0, 0, 0, 0, 16777215,
                           16777215, 16777215, 16777215};
        int pixels[] = {16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,
                        16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,
                        16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,
                        16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,
                        16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,
                        16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,
                        16777215,16777215,16777215,16777215,16777215,16777215,0,0,0,0,
                        0,0,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,
                        16777215,16777215,16777215,16777215,16777215,0,0,0,0,0,
                        0,0,0,0,16777215,16777215,16777215,16777215,16777215,16777215,
                        16777215,16777215,16777215,16777215,16777215,16777215,0,16777215,16777215,16777215,
                        16777215,16777215,0,0,0,16777215,16777215,16777215,16777215,16777215,
                        16777215,16777215,16777215,16777215,16777215,16777215,0,16777215,16777215,16777215,
                        16777215,16777215,16777215,16777215,0,0,16777215,16777215,16777215,16777215,
                        16777215,16777215,16777215,16777215,16777215,16777215,0,16777215,16777215,16777215,
                        16777215,16777215,16777215,16777215,16777215,0,16777215,16777215,16777215,16777215,
                        16777215,16777215,16777215,16777215,16777215,16777215,0,16777215,16777215,16777215,
                        16777215,16777215,16777215,16777215,16777215,0,0,16777215,16777215,16777215,
                        16777215,16777215,16777215,16777215,16777215,16777215,0,16777215,16777215,16777215,
                        16777215,16777215,16777215,16777215,16777215,0,0,16777215,16777215,16777215,
                        16777215,16777215,16777215,16777215,16777215,16777215,0,16777215,16777215,16777215,
                        16777215,16777215,16777215,16777215,16777215,0,0,16777215,16777215,16777215,
                        16777215,16777215,16777215,16777215,16777215,16777215,0,16777215,16777215,16777215,
                        16777215,16777215,16777215,16777215,16777215,0,0,16777215,16777215,16777215,
                        16777215,16777215,16777215,16777215,16777215,16777215,0,16777215,16777215,16777215,
                        16777215,16777215,16777215,16777215,16777215,0,0,16777215,16777215,16777215,
                        16777215,16777215,16777215,16777215,16777215,16777215,0,16777215,16777215,16777215,
                        16777215,16777215,16777215,16777215,0,0,16777215,16777215,16777215,16777215,
                        16777215,16777215,16777215,16777215,16777215,16777215,0,16777215,16777215,16777215,
                        16777215,16777215,16777215,0,0,0,16777215,16777215,16777215,16777215,
                        16777215,16777215,16777215,16777215,16777215,0,0,0,16777215,16777215,
                        16777215,0,0,0,0,16777215,16777215,16777215,16777215,16777215,
                        16777215,16777215,16777215,16777215,16777215,0,0,0,0,0,
                        0,0,0,16777215,16777215,16777215,16777215,16777215,16777215,16777215,
                        16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,
                        16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,
                        16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,
                        16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,
                        16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,
                        16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,
                        16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,
                        16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215,16777215};
        for(int i=0;i<420;i++){
            int x = i%20;
            int y = i/20;
            rImage.setRGB(x, y, pixels[i]);
        }



        RasterImage result = CutCharacter.findBorders(rImage);
        for(int i=0;i<168;i++)
        assertEquals(expResult[i], result.getRGB(i));
        
    }
}
